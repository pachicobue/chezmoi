#compdef cpt

autoload -U is-at-least

_cpt() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_cpt_commands" \
"*::: :->cpt" \
&& ret=0
    case $state in
    (cpt)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:cpt-command-$line[1]:"
        case $line[1] in
            (expand)
_arguments "${_arguments_options[@]}" : \
'-o+[出力先ファイル]:OUTPUT:_files' \
'--output=[出力先ファイル]:OUTPUT:_files' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':file -- 入力ファイル(.cppのみ対応):_files' \
&& ret=0
;;
(build)
_arguments "${_arguments_options[@]}" : \
'-o+[出力先ファイル]:OUTPUT:_files' \
'--output=[出力先ファイル]:OUTPUT:_files' \
'--release[コンパイル最適化フラグ]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':file -- 入力ファイル(.cppのみ対応):_files' \
&& ret=0
;;
(completion)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':shell -- Shell:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_cpt__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:cpt-help-command-$line[1]:"
        case $line[1] in
            (expand)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(build)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(completion)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_cpt_commands] )) ||
_cpt_commands() {
    local commands; commands=(
'expand:ソースコード中の#includeを展開する' \
'build:ソースコードをビルドする' \
'completion:シェル補完関数を生成する' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'cpt commands' commands "$@"
}
(( $+functions[_cpt__build_commands] )) ||
_cpt__build_commands() {
    local commands; commands=()
    _describe -t commands 'cpt build commands' commands "$@"
}
(( $+functions[_cpt__completion_commands] )) ||
_cpt__completion_commands() {
    local commands; commands=()
    _describe -t commands 'cpt completion commands' commands "$@"
}
(( $+functions[_cpt__expand_commands] )) ||
_cpt__expand_commands() {
    local commands; commands=()
    _describe -t commands 'cpt expand commands' commands "$@"
}
(( $+functions[_cpt__help_commands] )) ||
_cpt__help_commands() {
    local commands; commands=(
'expand:ソースコード中の#includeを展開する' \
'build:ソースコードをビルドする' \
'completion:シェル補完関数を生成する' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'cpt help commands' commands "$@"
}
(( $+functions[_cpt__help__build_commands] )) ||
_cpt__help__build_commands() {
    local commands; commands=()
    _describe -t commands 'cpt help build commands' commands "$@"
}
(( $+functions[_cpt__help__completion_commands] )) ||
_cpt__help__completion_commands() {
    local commands; commands=()
    _describe -t commands 'cpt help completion commands' commands "$@"
}
(( $+functions[_cpt__help__expand_commands] )) ||
_cpt__help__expand_commands() {
    local commands; commands=()
    _describe -t commands 'cpt help expand commands' commands "$@"
}
(( $+functions[_cpt__help__help_commands] )) ||
_cpt__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'cpt help help commands' commands "$@"
}

if [ "$funcstack[1]" = "_cpt" ]; then
    _cpt "$@"
else
    compdef _cpt cpt
fi
